- ability to change i2c address of any slave device through web interface (to avoid conflicts) - STRETCH - automatically do this?
- ability to create a module for specific outlet(s) eg. light cycle module, fan cycle - See soft modules below
- ability to use sensor alerts to trigger outlets
- ability to poll sensors more often based on what activity is happening, eg. when c02 is on poll c02 sensor every second
- ability to have sensor alerts make an emergency sensor poll(regardless of sensor update frequency)
- day vs. night settings

- Hard module types:
  - power
    - 2ch_12v
    - 4ch
    - 8ch
    - 16ch
  - camera
  - sensorHub
    - X size (small)
    - X size (large)

- Soft module types:
  - light
  - fan
  - exhaust
  - humidifier_dehumidifier
  - heating_cooling //Can be used for room or reservoir, ect
  - nutrient_ph

- Sensor types:
  - soilMoisture
  - temp_humidity
  - temp //Can be used for reservoir, soil, ect.
  - lightIntensity
  - reservoirLevel
  - C02
  - pH
  - flood
  - PIR
  - door
  - HID //Could be a button, potentiometer, ect.

=======================
- brain boots
- node app starts
- scans serial bus for connected (hard)modules
  - modules report type and id
- loads and parses the config file
  - checks configured (hard)modules against the reported modules, throws error for any that are configured and not connected
  - loads any configured camera modules, (perhaps preforms a scan?)
  - loads all (soft)modules that are configured
- initiates web server and sockets
- sensor hubs send updates every X often based on sensor average (how many readings between)
- server saves all new changes to file every X (configured) - and when sent a save command




This should have a parent app to help configure your "space". (Should have easy duplication, as I imagine that'll be one of the main cases)
This app will help you figure out the minimum modules you need to operate your space.
Maybe this should just be the main app.. It lets you set everything up then order, and its ready to go when you get your order..
Then if you ever want to tweak it you are using the same interface.
I imagine it will essentially walk you through logical groupings of sensors and use cases trying to maximize the number of overlapping uses.
Your space would be groups of your individual environments and even groups of groups, possibly even intersecting groups.
You would have modules that operate on the individual environments as well as at the group level.
Groups should be based on physical location so as to better make use of shared outlets and sensor hubs.
USB only goes ~15 ft max which means anything beyond that will have to be another island.
Each island will need a brain, seems a bit overkill but these things are so cheap these days..
Brains will probably need to decide a master and all others join as slaves.
Maybe the user should just set one, that way it could be the one with the most reliable connection or whatever.
Would probably still need to have someone takeover if the other goes down though.
Or, there could be slave brains that are weaker and more dedicated.


indoor:
general
  nutrient vat
    water level detector
    temp sensor
    nuturient pumps
    mixing pump
    supply pump
  light controller
  fan controller
  co2 controller

every plant
  soil moisture
  solonoid controlled sprinkler
every 3 plants
  temp sensor
  humidity sensor
  light sensor
every 5 plants
  co2 sensor
every 10 plants
  flood sensor


outdoor:
general
  nutrient vat
    water level detector
    temp sensor
    nuturient pumps
    mixing pump
    supply pump
  weather station
    temp sensor
    humidity sensor
    light sensor
    wind speed/direction sensor
    rain detector

every plant
  soil moisture
  solonoid controlled sprinkler
every 3 plants
  temp sensor
  humidity sensor
  light sensor
